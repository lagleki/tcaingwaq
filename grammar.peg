text = F them:connection* F {
  return them.join(" ");
}
F = x:[^a-zA-Z]* { return /*(x.join("").replace(/\s/g, "").length ? "<" + x.join("") + ">" : "")*/; }

connection = left:verb right:verb more:RO_clause* {
  return "[" + left + " " + right + (more.length ? " " + more.join(" ") : "") + "]";
}

RO_clause = l:RO r:verb {
  return "(" + l + " " + r + ")";
}

verb = F it:(doq YU* / WO YU* / SO_clause) F {
  return it.join("-");
}

SO_clause = F so:SO yu:YU* c:connection F {
  return "(" + so + (yu.length ? "-" + yu.join("-") : "") + " " + c + ")";
}

doq = F it:(((syllable_ (n / l))+ syllable_ q?) / (syllable_ q)) F {
  return it.toString().replace(/,/g,"");
}

WO = &syllable x:("co" / "fe" / "wa" / "wo") {return x}
RO = &syllable x:("ro") {return x}
YU = &syllable x:("gu" / "ju" / "yu" / "zo") {return x}
SO = &syllable x:("so") {return x}

syllable = syllable_ N?
syllable_ = (initialC C? G? / G) V V?

C = [bBcCdDfFgGhHjJkKlLmMnNpPqQrRsStTvVzZ]
initialC = [bBcCdDfFgGhHjJkKmMpPrRsStTvVzZ]
G = [yYwW]
V = [aAeEiIoOuU]
N = [nNlLqQ]
n = [nN]
l = [lL]
q = [qQ]
